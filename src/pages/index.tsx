import Head from 'next/head'
import styles from '@/styles/Home.module.css'
import Login from '../components/Login'
import { container } from '@/config/bootstrap'

/**
 * Props for the Home component
 * @typedef {Object} Props 
 * @property {string} redirectUrl - The url to redirect to after button press
 */
type Props = {
  redirectUrl: string
}

/**
 * The Home page
 * 
 * @param {Props} props - The props for the Home component
 * @return {JSX.Element} - The Home page
 * 
 */
export default function Home({ redirectUrl }: Props) {

  try {
    return (
      <>
        <Head>
          <title>WT1</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <main className={styles.main}>
          <div>
            <Login redirectUrl={redirectUrl} />
          </div>
        </main>
      </>
    )
  } catch (error) {
    return (
      <>
        <Head>
          <title>WT1</title>
          <meta name="description" content="Generated by create next app" />
          <meta name="viewport" content="width=device-width, initial-scale=1" />
          <link rel="icon" href="/favicon.ico" />
        </Head>
        <main className={styles.main}>
          <div className='error-component'>
            <h1>Something went wrong.</h1>
          </div>
        </main>
      </>
    )
  }


}

/**
 * Check if the user is logged in and redirect to the dashboard if they are
 * Get the redirect url for the login button
 * 
 * @param {Object} context  - The Next.js context object
 * @returns {Object} - The props for the Home component
 */
export async function getServerSideProps(context: any) {

  const authController = container.resolve('AuthController')
  const { req, res } = context

  const isLoggedIn = await authController.userIsLoggedIn(req, res)
  const redirectUrl = authController.getRedirectUrl()

  if (isLoggedIn) {
    return {
      redirect: {
        destination: '/dashboard',
        permanent: false
      }
    }
  } else {
    return {
      props: {
        redirectUrl
      }
    }
  }
}



